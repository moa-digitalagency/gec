# GEC Mines - D√©pendances du Projet
# =====================================
# Ce fichier liste toutes les d√©pendances Python n√©cessaires pour le projet GEC Mines
# Date de mise √† jour: 29 Ao√ªt 2025
# Version: 1.0.1
# Python Version: 3.11+
#
# Installation:
# pip install -r project-dependencies.txt

# Framework Web Principal
# -----------------------
Flask==3.1.1                    # Framework web Python
Flask-SQLAlchemy==3.1.1        # Extension ORM pour Flask
Flask-Login==0.6.3             # Gestion de l'authentification
Werkzeug==3.1.3                # Utilitaires WSGI et s√©curit√©
gunicorn==23.0.0               # Serveur WSGI pour production

# Base de Donn√©es
# ---------------
SQLAlchemy==2.0.41              # ORM Python (version mise √† jour)
psycopg2-binary==2.9.10         # Adaptateur PostgreSQL

# S√©curit√© et Chiffrement
# -----------------------
cryptography==45.0.6            # Chiffrement AES-256 (version mise √† jour)
bcrypt==4.3.0                  # Hachage s√©curis√© des mots de passe (version mise √† jour)
pycryptodome==3.23.0            # Op√©rations cryptographiques suppl√©mentaires (version mise √† jour)
email-validator==2.2.0         # Validation des adresses email

# G√©n√©ration de Documents
# -----------------------
reportlab==4.4.2               # G√©n√©ration de PDF (version mise √† jour)
Pillow==11.3.0                  # Traitement d'images (PIL) (version mise √† jour)
opencv-python==4.12.0.88           # Vision par ordinateur et traitement d'images (version mise √† jour)

# Traitement et Export de Donn√©es
# --------------------------------
pandas==2.3.1                  # Analyse et manipulation de donn√©es (version mise √† jour)
xlsxwriter==3.2.5              # Cr√©ation de fichiers Excel (version mise √† jour)

# Notifications Email
# -------------------
sendgrid==6.12.4               # Service d'envoi d'emails SendGrid

# Configuration et Outils
# ------------------------
requests==2.32.4               # Client HTTP pour API externes
PyYAML==6.0.2                  # Parsing de fichiers YAML

# D√©pendances Syst√®me (pour les mises √† jour)
# --------------------------------------------
# git                   # Pour les mises √† jour en ligne (install√© au niveau syst√®me)
# zip/unzip            # Pour les mises √† jour hors ligne (g√©n√©ralement pr√©install√©)

# D√©pendances Automatiques
# ------------------------
# Ces packages sont install√©s automatiquement avec les d√©pendances ci-dessus:
# - Jinja2 (moteur de templates)
# - MarkupSafe (√©chappement HTML s√©curis√©)
# - click (interface ligne de commande)
# - itsdangerous (s√©rialisation s√©curis√©e)
# - numpy (calculs num√©riques)
# - python-dateutil (manipulation de dates)
# - pytz (gestion des fuseaux horaires)
# - six (compatibilit√© Python 2/3)

# Guide d'Installation Multi-Plateforme
# =====================================

# ü™ü INSTALLATION WINDOWS (Server 2008+, Windows 10/11)
# --------------------------------------------------------
# 1. Installer Python 3.11:
#    winget install --id Python.Python.3.11 -e
#    # Ou t√©l√©charger depuis python.org si winget non disponible
#
# 2. Installer Git:
#    winget install --id Git.Git -e
#    # Ou t√©l√©charger depuis git-scm.com
#
# 3. Cloner le projet:
#    git clone https://github.com/moa-digitalagency/gec.git
#    cd gec
#
# 4. Configurer PowerShell (si n√©cessaire):
#    Set-ExecutionPolicy -Scope CurrentUser RemoteSigned -Force
#
# 5. Cr√©er l'environnement virtuel:
#    python -m venv .venv
#    # Ou si le premier ne marche pas: py -3.11 -m venv .venv
#
# 6. Activer l'environnement:
#    .\.venv\Scripts\Activate.ps1
#    # Ou dans CMD: .venv\Scripts\activate.bat
#
# 7. Installer les d√©pendances:
#    python -m pip install -U pip wheel
#    python -m pip install -r project-dependencies.txt
#
# 8. Lancer l'application:
#    python .\main.py

# üçé INSTALLATION macOS (10.14+)
# -------------------------------
# 1. Installer Homebrew (si pas install√©):
#    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#
# 2. Installer Python 3.11 et Git:
#    brew install python@3.11 git
#
# 3. Cloner le projet:
#    git clone https://github.com/moa-digitalagency/gec.git
#    cd gec
#
# 4. Cr√©er l'environnement virtuel:
#    python3.11 -m venv .venv
#
# 5. Activer l'environnement:
#    source .venv/bin/activate
#
# 6. Installer les d√©pendances:
#    python -m pip install -U pip wheel
#    pip install -r project-dependencies.txt
#
# 7. Lancer l'application:
#    python main.py

# üêß INSTALLATION LINUX (Ubuntu/Debian/CentOS)
# ----------------------------------------------
# Ubuntu/Debian:
# 1. Mettre √† jour le syst√®me:
#    sudo apt update && sudo apt upgrade -y
#
# 2. Installer Python 3.11 et Git:
#    sudo apt install python3.11 python3.11-venv python3-pip git -y
#
# 3. Cloner le projet:
#    git clone https://github.com/moa-digitalagency/gec.git
#    cd gec
#
# 4. Cr√©er l'environnement virtuel:
#    python3.11 -m venv .venv
#
# 5. Activer l'environnement:
#    source .venv/bin/activate
#
# 6. Installer les d√©pendances:
#    python -m pip install -U pip wheel
#    pip install -r project-dependencies.txt
#
# 7. Lancer l'application:
#    python main.py
#
# CentOS/RHEL:
# 1. Installer les d√©pendances:
#    sudo yum update -y
#    sudo yum install python3.11 python3-pip git -y
#    # Ou pour CentOS 8+: sudo dnf install python3.11 python3-pip git -y
#
# 2. Suivre les √©tapes 3-7 ci-dessus

# ‚öôÔ∏è CONFIGURATION REQUISE
# -------------------------
# Variables d'environnement (cr√©er fichier .env):
# DATABASE_URL=postgresql://user:password@localhost/gecmines
# SESSION_SECRET=your-secret-key-here
# GEC_MASTER_KEY=your-encryption-key
# GEC_PASSWORD_SALT=your-password-salt
#
# Pour PostgreSQL (optionnel):
# Windows: winget install --id PostgreSQL.PostgreSQL
# macOS: brew install postgresql
# Linux: sudo apt install postgresql postgresql-contrib (Ubuntu/Debian)
#        sudo yum install postgresql-server postgresql-contrib (CentOS)

# Fonctionnalit√©s R√©centes Ajout√©es (Ao√ªt 2025)
# -----------------------------------------------
# - Templates d'email multi-langues configurables (Fran√ßais/Anglais)
# - Variables dynamiques dans les emails ({{numero_courrier}}, {{nom_utilisateur}}, etc.)
# - Interface d'administration pour gestion des templates email
# - Test SMTP int√©gr√© dans l'interface des param√®tres syst√®me  
# - Permissions granulaires pour gestion des templates (manage_email_templates)
# - Autocomplete de recherche avec suggestions bas√©es sur le texte index√©
# - Mise √† jour du syst√®me en ligne (Git) et hors ligne (ZIP) s√©curis√©es
# - API REST pour les suggestions de recherche (/api/search_suggestions)
# - Navigation au clavier dans les suggestions d'autocomplete
# - Sauvegarde automatique avant les mises √† jour avec pr√©servation compl√®te des donn√©es
# - Pr√©servation intelligente de la configuration et structure de base de donn√©es
# - Support SendGrid pour notifications email professionnelles

# Configuration Requise
# ---------------------
# Python: 3.11+
# PostgreSQL: 14+ (pour la base de donn√©es de production)
# M√©moire: Minimum 512MB RAM
# Stockage: 100MB pour l'application + espace pour les fichiers upload√©s
# Git: Pour les mises √† jour en ligne (optionnel)