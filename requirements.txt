# GEC Mines - Mail Management System
# Requirements pour déploiement externe
# ======================================
# Date: 18 Août 2025
# Python Version: 3.11+
#
# Installation:
# -------------
# 1. Créez un environnement virtuel:
#    python -m venv venv
#    
# 2. Activez l'environnement virtuel:
#    - Linux/Mac: source venv/bin/activate
#    - Windows: venv\Scripts\activate
#    
# 3. Installez les dépendances:
#    pip install -r requirements-deployment.txt
#
# 4. Configurez les variables d'environnement dans un fichier .env:
#    DATABASE_URL=postgresql://user:password@localhost/gecmines
#    SESSION_SECRET=your-secret-key-here
#    GEC_MASTER_KEY=your-encryption-key
#    GEC_PASSWORD_SALT=your-password-salt

# Framework Web
Flask==3.1.0
Flask-SQLAlchemy==3.1.1
Flask-Login==0.6.3
Werkzeug==3.1.3
gunicorn==23.0.0

# Base de Données
SQLAlchemy==2.0.35
psycopg2-binary==2.9.10

# Sécurité et Chiffrement
cryptography==43.0.3
bcrypt==4.2.1
pycryptodome==3.21.0
email-validator==2.2.0

# Génération de Documents
reportlab==4.2.5
Pillow==11.0.0
opencv-python==4.10.0.84

# Traitement de Données
pandas==2.2.3
xlsxwriter==3.2.0

# Configuration
python-dotenv==1.0.1

# Notes de Déploiement
# ====================
# 
# Pour PythonAnywhere:
# ---------------------
# 1. Uploadez le code via Git ou ZIP
# 2. Installez les dépendances dans la console Bash
# 3. Configurez le WSGI file avec:
#    sys.path.append('/home/username/mysite')
#    from main import app as application
# 4. Configurez les variables d'environnement dans le WSGI
# 5. Créez la base de données PostgreSQL
# 6. Exécutez les migrations initiales
#
# Pour un serveur Linux:
# ----------------------
# 1. Installez Python 3.11+, PostgreSQL 14+, nginx
# 2. Clonez le repository
# 3. Installez les dépendances
# 4. Configurez systemd pour gunicorn
# 5. Configurez nginx comme reverse proxy
# 6. Activez SSL avec Let's Encrypt
#
# Variables d'Environnement Requises:
# -----------------------------------
# DATABASE_URL         - URL de connexion PostgreSQL
# SESSION_SECRET       - Clé secrète pour les sessions Flask
# GEC_MASTER_KEY      - Clé de chiffrement AES-256
# GEC_PASSWORD_SALT   - Sel pour le hachage des mots de passe
#
# Commandes Post-Installation:
# ----------------------------
# python -c "from app import db; db.create_all()"  # Créer les tables
# python -c "from models import User; ..."         # Créer le super admin